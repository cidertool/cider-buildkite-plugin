#!/bin/bash

set -euo pipefail

# Reads either a value or a list from plugin config
function plugin_read_list() {
    local prefix="BUILDKITE_PLUGIN_CIDER_$1"
    local parameter="${prefix}_0"

    if [[ -n "${!parameter:-}" ]]; then
        local i=0
        local parameter="${prefix}_${i}"
        while [[ -n "${!parameter:-}" ]]; do
            echo "${!parameter}"
            i=$((i + 1))
            parameter="${prefix}_${i}"
        done
    elif [[ -n "${!prefix:-}" ]]; then
        echo "${!prefix}"
    fi
}

function validate_environment() {
    local missing=0
    [ -z "${ASC_KEY_ID:-}" ] && {
        missing=1
        echo "+++ ðŸš¨ No ASC_KEY_ID environment variable could be identified."
    }
    [ -z "${ASC_ISSUER_ID:-}" ] && {
        missing=1
        echo "+++ ðŸš¨ No ASC_ISSUER_ID environment variable could be identified."
    }
    [ -z "${ASC_PRIVATE_KEY:-}" ] && [ -z "${ASC_PRIVATE_KEY_PATH:-}" ] && {
        missing=1
        echo "+++ ðŸš¨ No ASC_PRIVATE_KEY or ASC_PRIVATE_KEY_PATH environment variable could be identified."
    }
    if [ $missing -ne 0 ]; then
        exit 1
    fi
}

version="${BUILDKITE_PLUGIN_CIDER_VERSION:-latest}"

# Read in the arguments to pass to Cider.
args=()
while IFS=$'\n' read -r arg; do
    args+=("$arg")
done < <(plugin_read_list ARGS)

if [ -n "${BUILDKITE_PLUGIN_CIDER_WORKDIR:-.}" ]; then
    cd "${BUILDKITE_PLUGIN_CIDER_WORKDIR:-.}"
fi

validate_environment

echo "+++ Running Cider"
if docker run \
    --rm \
    -v "$PWD:/mnt" \
    -e ASC_KEY_ID \
    -e ASC_ISSUER_ID \
    -e ASC_PRIVATE_KEY \
    -e ASC_PRIVATE_KEY_PATH \
    --workdir "/mnt" \
    "cidertool/cider:$version" \
    "${args[@]}"; then
    echo "Cider ran successfully âœ…"
else
    exit 1
fi
